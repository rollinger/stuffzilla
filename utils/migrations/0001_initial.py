# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-18 06:41
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import geoposition.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(help_text='Street Name', max_length=255, verbose_name='Street')),
                ('street_number', models.CharField(help_text='House Number', max_length=55, verbose_name='Street Number')),
                ('supplement', models.CharField(blank=True, help_text='Additional Information (Appartment Number,...)', max_length=255, null=True, verbose_name='Address Supplements')),
                ('zipcode', models.CharField(blank=True, help_text='Area Code', max_length=55, null=True, verbose_name='Zip Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
                'ordering': ['street', 'street_number'],
            },
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of Area in the hierarchy. E.g.: City or Country', max_length=255, verbose_name='Area Name')),
                ('geobox_upper', geoposition.fields.GeopositionField(blank=True, help_text='Upper-Left Geoposition (latitude and longitude) of the Area', max_length=42, null=True, verbose_name='Upper-Left Geoposition Boundary')),
                ('geobox_lower', geoposition.fields.GeopositionField(blank=True, help_text='Lower-Right Geoposition (latitude and longitude) of the Area', max_length=42, null=True, verbose_name='Lower-Right Geoposition Boundary')),
                ('geobox_center', geoposition.fields.GeopositionField(blank=True, help_text='Centered Geoposition (latitude and longitude) of the Area', max_length=42, null=True, verbose_name='Centered Geoposition')),
                ('verified', models.BooleanField(default=False, help_text='If the specified area is verified to be existent and relevant', verbose_name='Verified Area')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('adjacent_areas', mptt.fields.TreeManyToManyField(blank=True, help_text='Areas that are neighbors or subsets of this area.', related_name='_area_adjacent_areas_+', to='utils.Area')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='utils.Area')),
            ],
            options={
                'verbose_name': 'Area',
                'verbose_name_plural': 'Areas',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Standard language code representation. Ex.: en_AU', max_length=10, verbose_name='Language Code')),
                ('name', models.CharField(help_text='Name of the Language. Ex.: English', max_length=100, verbose_name='Language Name')),
                ('name_en', models.CharField(help_text='Name of the Language. Ex.: English', max_length=100, null=True, verbose_name='Language Name')),
                ('name_de', models.CharField(help_text='Name of the Language. Ex.: English', max_length=100, null=True, verbose_name='Language Name')),
                ('name_pt', models.CharField(help_text='Name of the Language. Ex.: English', max_length=100, null=True, verbose_name='Language Name')),
                ('name_es', models.CharField(help_text='Name of the Language. Ex.: English', max_length=100, null=True, verbose_name='Language Name')),
                ('country', models.CharField(blank=True, help_text='Name of the Country. Ex.: Australia', max_length=100, null=True, verbose_name='Country')),
                ('country_en', models.CharField(blank=True, help_text='Name of the Country. Ex.: Australia', max_length=100, null=True, verbose_name='Country')),
                ('country_de', models.CharField(blank=True, help_text='Name of the Country. Ex.: Australia', max_length=100, null=True, verbose_name='Country')),
                ('country_pt', models.CharField(blank=True, help_text='Name of the Country. Ex.: Australia', max_length=100, null=True, verbose_name='Country')),
                ('country_es', models.CharField(blank=True, help_text='Name of the Country. Ex.: Australia', max_length=100, null=True, verbose_name='Country')),
                ('supported', models.BooleanField(default=False, help_text='If the language is supported in the App Translation Sytem', verbose_name='Translation supported')),
            ],
            options={
                'verbose_name': 'Language',
                'verbose_name_plural': 'Language',
                'ordering': ['name', 'country'],
            },
        ),
        migrations.AddField(
            model_name='address',
            name='area',
            field=models.ForeignKey(help_text='Owner of the Item or Service', on_delete=django.db.models.deletion.PROTECT, related_name='addresses', to='utils.Area'),
        ),
        migrations.AddField(
            model_name='address',
            name='user',
            field=models.ForeignKey(blank=True, help_text='User creating the Address', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='addresses', to=settings.AUTH_USER_MODEL),
        ),
    ]
