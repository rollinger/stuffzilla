
O..   GOAL 0.3.0.1
    Test Axios to async load data via REST
    OK   Develop Feedback App with the TestimonialComponent in Vue.js
        OK   Model & Admin & API for Testimonial Component
        OK   TestimonialComponent loads a random testimonial every x minutes and displays it in the footer.
    # OK    TODO [version 0.3]: change the Image save path (media/stuff/ and media/testimonials)
    # OK    TODO [version 0.3]: show image in Admin
    # OK    TODO [version 0.3]: change the Image save path (media/stuff/)
    # OK    TODO [version 0.3]: show image in Admin

    O   Howto Multi-Lang in django + vue.js? (also, best way for database field translations)

O   GOAL 0.3.0.2
    Develop Stuff Workflow (StuffComponent)
    O   Investigate and Implement Permissions (Guardian)
        O   Investigate DOC
        O   Define Guardian Permissions for Stuff
    O   REST & CRUD & Vue.js Implementations
        O   StuffComponent (all in one component)
            Aggregation of the CRUD Components
            O   StuffListComponent
                O   Filter on active & area
            O   StuffDetailComponent
            O   StuffEditComponent
                O   Permission user == owner
            O   StuffCreateComponent => StuffEditComponent
                O   Permission user == owner if Edit
            O   StuffDeleteComponent
                O   Permission user == owner
        O   Stuff List Entry (image, title, sharetype, time ago)
        O   Stuff Detail View
        O   Edit Details
        O   New Stuff
        => Save (=>profile/StuffLibrary), Save and add another (=>SCW), Cancel (Main Page)

O   GOAL 0.3.0.3
    Develop SharingRequest Workflow (Model & Admin & API for SharingRequestComponent)
    O   REST & CRUD & Vue.js Implementations
        O   Define Guardian Permissions for
O   GOAL 0.3.0.4
    Develop SharingOffer Workflow (Model & Admin & API for SharingOfferComponent)

O   GOAL 0.3.0.5
    Develop Profile Workflow (Model & Admin & API for ProfileComponent)




O   GOAL 0.3.0.2

    O   REST & CRUD & Vue.js Implementations
        O   SW-1    Sharing Request not targeted at a Stuff Entry
        O   SW-5    Sharing Offer of Stuff targeted at a Sharing Request


O   GOAL 0.3.1:
    Develop UserProfile and Vue.js Component
    O   UserProfile (1to1=> auth.user)
        O   Fields:
            - Image (media/users)
            - short bio
            - want email reminder (default=True)
            - Address (Main Area)
            - Additional Areas to Observe
    O   Account Information (1to1=> auth.user)
        O   Fields:
            -
O   BUGFIX: psycopg2 warning
    /usr/local/lib/python3.6/site-packages/psycopg2/__init__.py:144: UserWarning: The psycopg2 wheel package will be renamed from release 2.8; in order to keep installing from binary please use "pip install psycopg2-binary" instead. For details see: <http://initd.org/psycopg/docs/install.html#binary-install-from-pypi>.

O   GOAL 0.3.1:
    Develop Main Page

O   GOAL 0.3.2
    Develop Sharing Agreement, Sharing Terms and Workflow

O   GOAL 0.3.3
    Develop Sharing Review and Workflow

O   GOAL 0.4.1:
    Set up Review Model & Admin
    O   Add "Negotiate" Offer to W2
    O   REST & CRUD & Vue.js Implementations

O   GOAL 0.4.1
    Set up Terms Model & Admin
    O   Add "Negotiate" Offer to W2
    O   REST & CRUD & Vue.js Implementations

O   GOAL 0.5
    Develop Stuff Creation Workflow
    O   W3: REST & CRUD & Vue.js Implementations

O   GOAL 0.6
    User Profile Workflows (Sketch out (lists,workflows))






O   GOAL 3:
    Implement basic Search, Stuff Creation and Booking Workflows in the Frontend
    O   REST Implementations
    O   W1: Search and View Stuff
    O   W2: CRUD Stuff Listings
    O   W3: CRUD Bookings

    O   Stuff Date Filter? Available from...to

O   GOAL 3:
    Implement User Dashboard
    O   Extend userprofile
    O   Implement the permissions when a user can lend and share (like requirements: email, phone, confirmed, etc...)

O   BookingEvent Model
O   Transaction Model
O   Delete Hook for Stuff, Booking and BookingEvents
    O   Deletes should result in stale version of the object (hook delete signal)

ISSUES:
O   on_delete=models.PROTECT means that deleting a User or other model is not possible if the Instance has associated instances. Resolve this with a active bool and on_delete hook. Also the querysets should reflect that, e.g. only active User Instances should be queried. In some cases the models.PROTECT can also be change into other viable values models.SET_NULL, etc...

FUTURE FEATURES
# O    TODO [version 0.]: Category System useful for Stuff?
# O    TODO [version 0.5]: Implement Long/Lat Functions in position App
    longitude   = models.FloatField(_('Longitude'), null=True, blank=True)
    latitude    = models.FloatField(_('Latitude'), null=True, blank=True)
# O    TODO [version 0.]: User.on_delete signal => rather set to inactive, not delete!
# O    TODO [version 0.]: Add intelligent database indices to the models for faster retrieval
# O    TODO [version 0.]: Production Database should be fast MySQL or other
Inquiry:
    OK   What is Vuex?
        => State Management
    O..   How works Axios? => models.Stuff
        https://www.npmjs.com/package/vue-axios
    O
Bugfix:
    OK   Foundation not included?
        => CDN HOTLINKING... Webpack?
    O   Images Permission Problem (media)
Develop:
    O   Stuff Item Display Short Component
    O   Stuff Item Display Long Component
    O   Stuff Item Display Grid Component
    O   Stuff Item CRUD Actions
